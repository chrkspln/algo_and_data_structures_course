#   Рівень 3
#   Варіант 2
#
#   Реалізуйте структуру даних "черга з пріоритетами" на основі  AVL-дерева,
#   в якому  батьківський елемент має вищий пріоритет, ніж елемент справа,
#   або нижчий або рівний пріоритет, ніж пріоритет його лівої дитини.
#
#   Операції, які підтримує ваша черга:
#
#   1. Вставка елемента з заданим значенням та пріоритетом до черги.
#   2. Видалення та повернення елемента з найвищим пріоритетом з черги.
#   3. Перегляд черги без її зміни.
#
#   Для реалізації такої черги з пріоритетами слід використати
#   окремий клас `Node`, де кожен елемент буде мати два поля: значення та пріоритет.
#   При вставці елемента до черги, його потрібно розмістити
#   у відповідному порядку з урахуванням пріоритету.

